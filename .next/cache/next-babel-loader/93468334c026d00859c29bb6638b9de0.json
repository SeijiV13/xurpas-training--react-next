{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dellp\\\\Documents\\\\Seminar Resources\\\\RakSquad Training Materials\\\\RakSquad Xurpas React\\\\xurpas-training-next\\\\pages\\\\blogform.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as blogActions from '../store/blogs/actions';\nimport Layout from \"../components/Layout\";\nimport TextInput from \"../components/TextInput\";\n\nclass BlogForm extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      selectedBlog: Object.assign({}, this.props.selectedBlog),\n      blogFormAction: this.props.blogFormAction\n    };\n  }\n\n  render() {\n    let blogFormAction = this.state.blogFormAction;\n    let isDisabled = false;\n\n    if (blogFormAction === 'view') {\n      isDisabled = true;\n    }\n\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(TextInput, {\n      name: \"title\",\n      value: this.state.selectedBlog.title ? this.state.selectedBlog.title : \"\",\n      label: \"Title\",\n      onChange: this.updateState,\n      disabled: isDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), __jsx(TextInput, {\n      name: \"description\",\n      value: this.state.selectedBlog.description ? this.state.selectedBlog.description : \"\",\n      label: \"Description\",\n      onChange: this.updateState,\n      disabled: isDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), blogFormAction !== 'view' ? __jsx(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Submit\") : \"\");\n  }\n\n  updateState(event) {\n    let field = event.target.name;\n    let selectedBlog = Object.assign({}, this.state.selectedBlog);\n    selectedBlog[field] = event.target.value;\n    return this.setState({\n      selectedBlog\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedBlog: state.blogs.selectedBlog,\n    blogFormAction: state.blogs.blogFormAction\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators(Object.assign({}, blogActions), dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogForm);","map":{"version":3,"sources":["C:/Users/dellp/Documents/Seminar Resources/RakSquad Training Materials/RakSquad Xurpas React/xurpas-training-next/pages/blogform.js"],"names":["bindActionCreators","connect","blogActions","Layout","TextInput","BlogForm","React","Component","constructor","props","context","state","selectedBlog","Object","assign","blogFormAction","render","isDisabled","title","updateState","description","event","field","target","name","value","setState","mapStateToProps","blogs","mapDispatchToProps","dispatch","actions"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,QAAN,SAAuBC,KAAK,CAACC,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKL,KAAL,CAAWG,YAA7B,CADL;AAETG,MAAAA,cAAc,EAAE,KAAKN,KAAL,CAAWM;AAFlB,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAID,cAAc,GAAG,KAAKJ,KAAL,CAAWI,cAAhC;AACA,QAAIE,UAAU,GAAG,KAAjB;;AACA,QAAGF,cAAc,KAAK,MAAtB,EAA8B;AAC1BE,MAAAA,UAAU,GAAG,IAAb;AACH;;AACD,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AACA,MAAA,IAAI,EAAC,OADL;AAEA,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,YAAX,CAAwBM,KAAxB,GAA+B,KAAKP,KAAL,CAAWC,YAAX,CAAwBM,KAAvD,GAA8D,EAFrE;AAGA,MAAA,KAAK,EAAC,OAHN;AAIA,MAAA,QAAQ,EAAE,KAAKC,WAJf;AAKA,MAAA,QAAQ,EAAGF,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQG,MAAC,SAAD;AACC,MAAA,IAAI,EAAC,aADN;AAEC,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,YAAX,CAAwBQ,WAAxB,GAAqC,KAAKT,KAAL,CAAWC,YAAX,CAAwBQ,WAA7D,GAA0E,EAFlF;AAGC,MAAA,KAAK,EAAC,aAHP;AAIC,MAAA,QAAQ,EAAE,KAAKD,WAJhB;AAKC,MAAA,QAAQ,EAAGF,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARH,EAgBKF,cAAc,KAAK,MAAnB,GAA4B,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5B,GAAwE,EAhB7E,CADF;AAoBH;;AACDI,EAAAA,WAAW,CAACE,KAAD,EAAO;AACd,QAAIC,KAAK,GAAID,KAAK,CAACE,MAAN,CAAaC,IAA1B;AACA,QAAIZ,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKH,KAAL,CAAWC,YAA7B,CAAnB;AACAA,IAAAA,YAAY,CAACU,KAAD,CAAZ,GAAsBD,KAAK,CAACE,MAAN,CAAaE,KAAnC;AACA,WAAO,KAAKC,QAAL,CAAc;AAACd,MAAAA;AAAD,KAAd,CAAP;AACH;;AAzCkC;;AA6CvC,MAAMe,eAAe,GAAIhB,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,YAAY,EAAED,KAAK,CAACiB,KAAN,CAAYhB,YADvB;AAEHG,IAAAA,cAAc,EAAEJ,KAAK,CAACiB,KAAN,CAAYb;AAFzB,GAAP;AAIH,CALD;;AAOA,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,OAAO,EAAE/B,kBAAkB,CAACa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,WAAlB,CAAD,EAAiC4B,QAAjC;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAe7B,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,QAA7C,CAAf","sourcesContent":["import { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as blogActions from '../store/blogs/actions';\r\nimport Layout from \"../components/Layout\";\r\nimport TextInput from \"../components/TextInput\";\r\n\r\nclass BlogForm extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            selectedBlog: Object.assign({}, this.props.selectedBlog),\r\n            blogFormAction: this.props.blogFormAction\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let blogFormAction = this.state.blogFormAction;\r\n        let isDisabled = false;\r\n        if(blogFormAction === 'view') {\r\n            isDisabled = true;\r\n        }\r\n        return (\r\n          <Layout>\r\n              <TextInput\r\n              name=\"title\"\r\n              value={this.state.selectedBlog.title? this.state.selectedBlog.title: \"\"}\r\n              label=\"Title\"\r\n              onChange={this.updateState}\r\n              disabled= {isDisabled}\r\n              />\r\n             <TextInput\r\n              name=\"description\"\r\n              value={this.state.selectedBlog.description? this.state.selectedBlog.description: \"\"}\r\n              label=\"Description\"\r\n              onChange={this.updateState}\r\n              disabled= {isDisabled}\r\n              />\r\n\r\n              {blogFormAction !== 'view' ? <Button variant=\"primary\">Submit</Button> : \"\"}\r\n          </Layout>   \r\n        )\r\n    }\r\n    updateState(event){\r\n        let field =  event.target.name;\r\n        let selectedBlog = Object.assign({}, this.state.selectedBlog);\r\n        selectedBlog[field] = event.target.value;\r\n        return this.setState({selectedBlog});\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedBlog: state.blogs.selectedBlog,\r\n        blogFormAction: state.blogs.blogFormAction\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        actions: bindActionCreators(Object.assign({}, blogActions), dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogForm);"]},"metadata":{},"sourceType":"module"}