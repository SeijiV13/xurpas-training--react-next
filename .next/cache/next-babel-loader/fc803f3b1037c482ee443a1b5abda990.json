{"ast":null,"code":"import axios from \"axios\";\nconst HTTP_ENDPOINT = \"http://localhost:5000\";\nexport const blogActionTypes = {\n  GET_ALL_BLOGS: 'GET_ALL_BLOGS',\n  SET_SELECTED_BLOG: 'SET_SELECTED_BLOG'\n};\nexport const getAllBlogs = () => {\n  return dispatch => {\n    return axios.get(`${HTTP_ENDPOINT}/blog`, {\n      headers: {\n        \"Content-Type\": \"application.json\"\n      }\n    }).then(({\n      data\n    }) => data).then(blogs => dispatch({\n      type: blogActionTypes.GET_ALL_BLOGS,\n      data: blogs\n    }));\n  };\n};\nexport const setSelectedBLog = blog => {\n  return dispatch => {\n    dispatch({\n      type: blogActionTypes.SET_SELECTED_BLOG,\n      data: blog\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/dellp/Documents/Seminar Resources/RakSquad Training Materials/RakSquad Xurpas React/xurpas-training-next/store/blogs/actions.js"],"names":["axios","HTTP_ENDPOINT","blogActionTypes","GET_ALL_BLOGS","SET_SELECTED_BLOG","getAllBlogs","dispatch","get","headers","then","data","blogs","type","setSelectedBLog","blog"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,aAAa,GAAG,uBAAtB;AACA,OAAO,MAAMC,eAAe,GAAG;AAC3BC,EAAAA,aAAa,EAAE,eADY;AAE3BC,EAAAA,iBAAiB,EAAE;AAFQ,CAAxB;AAKP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7B,SAAOC,QAAQ,IAAI;AACf,WAAON,KAAK,CAACO,GAAN,CAAW,GAAEN,aAAc,OAA3B,EAAmC;AACtCO,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAD6B,KAAnC,EAIJC,IAJI,CAIC,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAYA,IAJb,EAKND,IALM,CAKDE,KAAK,IAAIL,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEV,eAAe,CAACC,aAAxB;AAAuCO,MAAAA,IAAI,EAAEC;AAA7C,KAAD,CALhB,CAAP;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAME,eAAe,GAAIC,IAAD,IAAU;AACrC,SAAOR,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAACM,MAAAA,IAAI,EAAEV,eAAe,CAACE,iBAAvB;AAA0CM,MAAAA,IAAI,EAAEI;AAAhD,KAAD,CAAR;AACH,GAFD;AAGH,CAJM","sourcesContent":["import axios from \"axios\"\r\nconst HTTP_ENDPOINT = \"http://localhost:5000\";\r\nexport const blogActionTypes = {\r\n    GET_ALL_BLOGS: 'GET_ALL_BLOGS',\r\n    SET_SELECTED_BLOG: 'SET_SELECTED_BLOG'\r\n}\r\n\r\nexport const getAllBlogs = () => {\r\n    return dispatch => {\r\n        return axios.get(`${HTTP_ENDPOINT}/blog`, {\r\n            headers: {\r\n                \"Content-Type\": \"application.json\"\r\n            }\r\n        }).then(({data}) => data)\r\n        .then(blogs => dispatch({ type: blogActionTypes.GET_ALL_BLOGS, data: blogs}))\r\n    }\r\n}\r\n\r\nexport const setSelectedBLog = (blog) => {\r\n    return dispatch => {\r\n        dispatch({type: blogActionTypes.SET_SELECTED_BLOG, data: blog})\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}