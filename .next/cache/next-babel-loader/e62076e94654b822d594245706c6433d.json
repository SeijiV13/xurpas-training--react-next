{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'React';\nimport Layout from '../components/Layout';\nimport { bindActionCreators } from 'redux';\nimport * as blogActions from '../store/blogs/actions';\nimport { connect } from 'react-redux';\nimport BlogList from '../components/BlogList';\nimport { throws as _throws } from 'assert';\nimport Router from 'next/router';\nimport { Button } from 'react-bootstrap';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props, context) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props, context));\n    _this.state = {\n      blogs: _Object$assign({}, _this.props.blogs)\n    };\n    _this.selectBlog = _this.selectBlog.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var blogs = this.props.blogs;\n      return __jsx(Layout, null, __jsx(BlogList, {\n        blogs: blogs,\n        onClick: function onClick(data) {\n          return _this2.selectBlog(data);\n        }\n      }), __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.selectBlog({\n            blog: null,\n            action: \"create\"\n          });\n        }\n      }, \"Create Blog\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.actions.getAllBlogs();\n    }\n  }, {\n    key: \"selectBlog\",\n    value: function selectBlog(data) {\n      var _this3 = this;\n\n      if (data.action === \"delete\") {\n        this.props.actions.deleteBlog(data.blog.id).then(function () {\n          _this3.props.actions.getAllBlogs();\n\n          _this3.props.toastr.add({\n            position: 'top-right',\n            type: 'success',\n            title: \"Deletion Successfull\",\n            message: \"Successfully deleted \".concat(data.blog.title)\n          });\n        });\n        return;\n      }\n\n      this.props.actions.setSelectedBlog(data.blog);\n      this.props.actions.setBlogFormAction(data.action);\n      Router.push('/blogform');\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    blogs: state.blogs.allBlogs\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(_Object$assign({}, blogActions), dispatch),\n    toastr: bindActionCreators(_Object$assign({}, toastrActions), dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":null,"metadata":{},"sourceType":"module"}