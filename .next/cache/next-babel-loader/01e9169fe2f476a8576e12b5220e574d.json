{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as blogActions from '../store/blogs/actions';\nimport Layout from \"../components/Layout\";\nimport TextInput from \"../components/TextInput\";\nimport { Button } from \"react-bootstrap\";\nimport Router from \"next/router\";\n\nvar BlogForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlogForm, _React$Component);\n\n  function BlogForm(props, context) {\n    var _this;\n\n    _classCallCheck(this, BlogForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogForm).call(this, props, context));\n    _this.state = {\n      selectedBlog: _Object$assign({}, _this.props.selectedBlog),\n      blogFormAction: _this.props.blogFormAction\n    };\n    _this.saveBlog = _this.saveBlog.bind(_assertThisInitialized(_this));\n    _this.updateState = _this.updateState.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BlogForm, [{\n    key: \"render\",\n    value: function render() {\n      var blogFormAction = this.state.blogFormAction;\n      var isDisabled = false;\n\n      if (blogFormAction === 'view') {\n        isDisabled = true;\n      }\n\n      return __jsx(Layout, null, __jsx(TextInput, {\n        name: \"title\",\n        value: this.state.selectedBlog.title ? this.state.selectedBlog.title : \"\",\n        label: \"Title\",\n        onChange: this.updateState,\n        disabled: isDisabled\n      }), __jsx(TextInput, {\n        name: \"description\",\n        value: this.state.selectedBlog.description ? this.state.selectedBlog.description : \"\",\n        label: \"Description\",\n        onChange: this.updateState,\n        disabled: isDisabled\n      }), blogFormAction !== 'view' ? __jsx(Button, {\n        variant: \"primary\",\n        onClick: this.saveBlog\n      }, \"Submit\") : \"\");\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(event) {\n      var field = event.target.name;\n\n      var selectedBlog = _Object$assign({}, this.state.selectedBlog);\n\n      selectedBlog[field] = event.target.value;\n      return this.setState({\n        selectedBlog: selectedBlog\n      });\n    }\n  }, {\n    key: \"saveBlog\",\n    value: function saveBlog() {\n      if (this.state.blogFormAction === 'create') {\n        this.props.actions.createBlog(this.state.selectedBlog).then(function () {\n          Router.push(\"/\");\n        });\n      } else if (this.state.blogFormAction === 'edit') {\n        this.props.actions.updateBlog(this.state.selectedBlog).then(function () {\n          Router.push(\"/\");\n        });\n      }\n    }\n  }]);\n\n  return BlogForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedBlog: state.blogs.selectedBlog,\n    blogFormAction: state.blogs.blogFormAction\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(_Object$assign({}, blogActions), dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogForm);","map":null,"metadata":{},"sourceType":"module"}