{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dellp\\\\Documents\\\\Seminar Resources\\\\RakSquad Training Materials\\\\RakSquad Xurpas React\\\\xurpas-training-next\\\\pages\\\\blogform.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as blogActions from '../store/blogs/actions';\nimport Layout from \"../components/Layout\";\nimport TextInput from \"../components/TextInput\";\nimport { Button } from \"react-bootstrap\";\n\nvar BlogForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlogForm, _React$Component);\n\n  function BlogForm(props, context) {\n    var _this;\n\n    _classCallCheck(this, BlogForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogForm).call(this, props, context));\n    _this.state = {\n      selectedBlog: _Object$assign({}, _this.props.selectedBlog),\n      blogFormAction: _this.props.blogFormAction\n    };\n    return _this;\n  }\n\n  _createClass(BlogForm, [{\n    key: \"render\",\n    value: function render() {\n      var blogFormAction = this.state.blogFormAction;\n      var isDisabled = false;\n\n      if (blogFormAction === 'view') {\n        isDisabled = true;\n      }\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(TextInput, {\n        name: \"title\",\n        value: this.state.selectedBlog.title ? this.state.selectedBlog.title : \"\",\n        label: \"Title\",\n        onChange: this.updateState,\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), __jsx(TextInput, {\n        name: \"description\",\n        value: this.state.selectedBlog.description ? this.state.selectedBlog.description : \"\",\n        label: \"Description\",\n        onChange: this.updateState,\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), blogFormAction !== 'view' ? __jsx(Button, {\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Submit\") : \"\");\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(event) {\n      var field = event.target.name;\n\n      var selectedBlog = _Object$assign({}, this.state.selectedBlog);\n\n      selectedBlog[field] = event.target.value;\n      return this.setState({\n        selectedBlog: selectedBlog\n      });\n    }\n  }]);\n\n  return BlogForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedBlog: state.blogs.selectedBlog,\n    blogFormAction: state.blogs.blogFormAction\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(_Object$assign({}, blogActions), dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogForm);","map":{"version":3,"sources":["C:/Users/dellp/Documents/Seminar Resources/RakSquad Training Materials/RakSquad Xurpas React/xurpas-training-next/pages/blogform.js"],"names":["bindActionCreators","connect","blogActions","Layout","TextInput","Button","BlogForm","props","context","state","selectedBlog","blogFormAction","isDisabled","title","updateState","description","event","field","target","name","value","setState","React","Component","mapStateToProps","blogs","mapDispatchToProps","dispatch","actions"],"mappings":";;;;;;;;;AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;IAEMC,Q;;;AACF,oBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,kFAAMD,KAAN,EAAaC,OAAb;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,eAAc,EAAd,EAAkB,MAAKH,KAAL,CAAWG,YAA7B,CADL;AAETC,MAAAA,cAAc,EAAE,MAAKJ,KAAL,CAAWI;AAFlB,KAAb;AAFwB;AAM3B;;;;6BAEQ;AACL,UAAIA,cAAc,GAAG,KAAKF,KAAL,CAAWE,cAAhC;AACA,UAAIC,UAAU,GAAG,KAAjB;;AACA,UAAGD,cAAc,KAAK,MAAtB,EAA8B;AAC1BC,QAAAA,UAAU,GAAG,IAAb;AACH;;AACD,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwBG,KAAxB,GAA+B,KAAKJ,KAAL,CAAWC,YAAX,CAAwBG,KAAvD,GAA8D,EAFrE;AAGA,QAAA,KAAK,EAAC,OAHN;AAIA,QAAA,QAAQ,EAAE,KAAKC,WAJf;AAKA,QAAA,QAAQ,EAAGF,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQG,MAAC,SAAD;AACC,QAAA,IAAI,EAAC,aADN;AAEC,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwBK,WAAxB,GAAqC,KAAKN,KAAL,CAAWC,YAAX,CAAwBK,WAA7D,GAA0E,EAFlF;AAGC,QAAA,KAAK,EAAC,aAHP;AAIC,QAAA,QAAQ,EAAE,KAAKD,WAJhB;AAKC,QAAA,QAAQ,EAAGF,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARH,EAgBKD,cAAc,KAAK,MAAnB,GAA4B,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5B,GAAwE,EAhB7E,CADF;AAoBH;;;gCACWK,K,EAAM;AACd,UAAIC,KAAK,GAAID,KAAK,CAACE,MAAN,CAAaC,IAA1B;;AACA,UAAIT,YAAY,GAAG,eAAc,EAAd,EAAkB,KAAKD,KAAL,CAAWC,YAA7B,CAAnB;;AACAA,MAAAA,YAAY,CAACO,KAAD,CAAZ,GAAsBD,KAAK,CAACE,MAAN,CAAaE,KAAnC;AACA,aAAO,KAAKC,QAAL,CAAc;AAACX,QAAAA,YAAY,EAAZA;AAAD,OAAd,CAAP;AACH;;;;EAzCkBY,KAAK,CAACC,S;;AA6C7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACf,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,YAAY,EAAED,KAAK,CAACgB,KAAN,CAAYf,YADvB;AAEHC,IAAAA,cAAc,EAAEF,KAAK,CAACgB,KAAN,CAAYd;AAFzB,GAAP;AAIH,CALD;;AAOA,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHC,IAAAA,OAAO,EAAE5B,kBAAkB,CAAC,eAAc,EAAd,EAAkBE,WAAlB,CAAD,EAAiCyB,QAAjC;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAe1B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,QAA7C,CAAf","sourcesContent":["import { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as blogActions from '../store/blogs/actions';\r\nimport Layout from \"../components/Layout\";\r\nimport TextInput from \"../components/TextInput\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass BlogForm extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            selectedBlog: Object.assign({}, this.props.selectedBlog),\r\n            blogFormAction: this.props.blogFormAction\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let blogFormAction = this.state.blogFormAction;\r\n        let isDisabled = false;\r\n        if(blogFormAction === 'view') {\r\n            isDisabled = true;\r\n        }\r\n        return (\r\n          <Layout>\r\n              <TextInput\r\n              name=\"title\"\r\n              value={this.state.selectedBlog.title? this.state.selectedBlog.title: \"\"}\r\n              label=\"Title\"\r\n              onChange={this.updateState}\r\n              disabled= {isDisabled}\r\n              />\r\n             <TextInput\r\n              name=\"description\"\r\n              value={this.state.selectedBlog.description? this.state.selectedBlog.description: \"\"}\r\n              label=\"Description\"\r\n              onChange={this.updateState}\r\n              disabled= {isDisabled}\r\n              />\r\n\r\n              {blogFormAction !== 'view' ? <Button variant=\"primary\">Submit</Button> : \"\"}\r\n          </Layout>   \r\n        )\r\n    }\r\n    updateState(event){\r\n        let field =  event.target.name;\r\n        let selectedBlog = Object.assign({}, this.state.selectedBlog);\r\n        selectedBlog[field] = event.target.value;\r\n        return this.setState({selectedBlog});\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedBlog: state.blogs.selectedBlog,\r\n        blogFormAction: state.blogs.blogFormAction\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        actions: bindActionCreators(Object.assign({}, blogActions), dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogForm);"]},"metadata":{},"sourceType":"module"}