{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dellp\\\\Documents\\\\Seminar Resources\\\\RakSquad Training Materials\\\\RakSquad Xurpas React\\\\xurpas-training-next\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'React';\nimport Layout from '../components/Layout';\nimport { bindActionCreators } from 'redux';\nimport * as blogActions from '../store/blogs/actions';\nimport { connect } from 'react-redux';\nimport BlogList from '../components/BlogList';\nimport { throws as _throws } from 'assert';\nimport Router from 'next/router';\nimport { Button } from 'react-bootstrap';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props, context) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props, context));\n    _this.state = {\n      blogs: _Object$assign({}, _this.props.blogs)\n    };\n    _this.selectBlog = _this.selectBlog.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var blogs = this.props.blogs;\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(BlogList, {\n        blogs: blogs,\n        onClick: function onClick(data) {\n          return _this2.selectBlog(data);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.selectBlog({\n            blog: null,\n            action: \"create\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Create Blog\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.actions.getAllBlogs();\n    }\n  }, {\n    key: \"selectBlog\",\n    value: function selectBlog(data) {\n      var _this3 = this;\n\n      if (data.action === \"delete\") {\n        this.props.actions.deleteBlog(data.blog.id).then(function () {\n          _this3.props.actions.getAllBlogs();\n\n          _this3.props.toastr.add({\n            position: 'top-right',\n            type: 'success',\n            title: \"Deletion Successfull\",\n            message: \"Successfully deleted \".concat(data.blog.title)\n          });\n        });\n        return;\n      }\n\n      this.props.actions.setSelectedBlog(data.blog);\n      this.props.actions.setBlogFormAction(data.action);\n      Router.push('/blogform');\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    blogs: state.blogs.allBlogs\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(_Object$assign({}, blogActions), dispatch),\n    toastr: bindActionCreators(_Object$assign({}, toastrActions), dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["C:/Users/dellp/Documents/Seminar Resources/RakSquad Training Materials/RakSquad Xurpas React/xurpas-training-next/pages/index.js"],"names":["React","Layout","bindActionCreators","blogActions","connect","BlogList","throws","Router","Button","actions","toastrActions","Index","props","context","state","blogs","selectBlog","bind","data","blog","action","getAllBlogs","deleteBlog","id","then","toastr","add","position","type","title","message","setSelectedBlog","setBlogFormAction","push","Component","mapStateToProps","allBlogs","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'React';\r\nimport Layout from '../components/Layout';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as blogActions from '../store/blogs/actions';\r\nimport {connect} from 'react-redux';\r\nimport BlogList from '../components/BlogList';\r\nimport { throws } from 'assert';\r\nimport  Router  from 'next/router';\r\nimport { Button } from 'react-bootstrap';\r\nimport { actions as toastrActions} from 'react-redux-toastr';\r\nclass Index extends React.Component {\r\n    constructor(props, context){\r\n      super(props, context);\r\n      this.state = {\r\n          blogs: Object.assign({}, this.props.blogs)\r\n      }\r\n      this.selectBlog = this.selectBlog.bind(this);\r\n    }\r\n    render() {\r\n        const {blogs} = this.props;\r\n        return (\r\n            <Layout>\r\n                <BlogList blogs={blogs} onClick={(data) => this.selectBlog(data)}></BlogList>\r\n                <Button onClick={() => this.selectBlog({blog: null, action: \"create\"})}>Create Blog</Button>\r\n            </Layout>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.props.actions.getAllBlogs();\r\n    }\r\n\r\n    selectBlog(data) {\r\n        if(data.action === \"delete\") {\r\n            this.props.actions.deleteBlog(data.blog.id).then(() => {\r\n                this.props.actions.getAllBlogs();\r\n                this.props.toastr.add(\r\n                {\r\n                    position: 'top-right',\r\n                    type: 'success',\r\n                    title: \"Deletion Successfull\",\r\n                    message: `Successfully deleted ${data.blog.title}`\r\n                }\r\n                )\r\n            });\r\n            return;\r\n        }\r\n        this.props.actions.setSelectedBlog(data.blog);\r\n        this.props.actions.setBlogFormAction(data.action);\r\n        Router.push('/blogform');\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        blogs: state.blogs.allBlogs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        actions: bindActionCreators(Object.assign({}, blogActions), dispatch),\r\n        toastr: bindActionCreators(Object.assign({}, toastrActions), dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);"]},"metadata":{},"sourceType":"module"}