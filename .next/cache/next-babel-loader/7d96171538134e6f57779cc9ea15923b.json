{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dellp\\\\Documents\\\\Seminar Resources\\\\RakSquad Training Materials\\\\RakSquad Xurpas React\\\\xurpas-training-next\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'React';\nimport Layout from '../components/Layout';\nimport { bindActionCreators } from 'redux';\nimport * as blogActions from '../store/blogs/actions';\nimport { connect } from 'react-redux';\nimport BlogList from '../components/BlogList';\nimport { throws } from 'assert';\nimport Router from 'next/router';\nimport { Button } from 'react-bootstrap';\nimport { actions as toastrActions } from 'react-redux-toastr';\n\nclass Index extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      blogs: Object.assign({}, this.props.blogs)\n    };\n    this.selectBlog = this.selectBlog.bind(this);\n  }\n\n  render() {\n    const {\n      blogs\n    } = this.props;\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(BlogList, {\n      blogs: blogs,\n      onClick: data => this.selectBlog(data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), __jsx(Button, {\n      onClick: () => this.selectBlog({\n        blog: null,\n        action: \"create\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Create Blog\"));\n  }\n\n  componentDidMount() {\n    this.props.actions.getAllBlogs();\n  }\n\n  selectBlog(data) {\n    if (data.action === \"delete\") {\n      this.props.actions.deleteBlog(data.blog.id).then(() => {\n        this.props.actions.getAllBlogs();\n        this.props.toastr.add({\n          position: 'top-right',\n          type: 'success',\n          title: \"Deletion Successfull\",\n          message: `Successfully deleted ${data.blog.title}`\n        });\n      });\n      return;\n    }\n\n    this.props.actions.setSelectedBlog(data.blog);\n    this.props.actions.setBlogFormAction(data.action);\n    Router.push('/blogform');\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs.allBlogs\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators(Object.assign({}, blogActions), dispatch),\n    toastr: bindActionCreators(Object.assign({}, toastrActions), dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["C:/Users/dellp/Documents/Seminar Resources/RakSquad Training Materials/RakSquad Xurpas React/xurpas-training-next/pages/index.js"],"names":["React","Layout","bindActionCreators","blogActions","connect","BlogList","throws","Router","Button","actions","toastrActions","Index","Component","constructor","props","context","state","blogs","Object","assign","selectBlog","bind","render","data","blog","action","componentDidMount","getAllBlogs","deleteBlog","id","then","toastr","add","position","type","title","message","setSelectedBlog","setBlogFormAction","push","mapStateToProps","allBlogs","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAQC,MAAR,MAAqB,aAArB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,OAAO,IAAIC,aAApB,QAAwC,oBAAxC;;AACA,MAAMC,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAgB;AACzB,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKL,KAAL,CAAWG,KAA7B;AADE,KAAb;AAGA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACL,MAAAA;AAAD,QAAU,KAAKH,KAArB;AACA,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEG,KAAjB;AAAwB,MAAA,OAAO,EAAGM,IAAD,IAAU,KAAKH,UAAL,CAAgBG,IAAhB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKH,UAAL,CAAgB;AAACI,QAAAA,IAAI,EAAE,IAAP;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ;AAMH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,KAAL,CAAWL,OAAX,CAAmBkB,WAAnB;AACH;;AAEDP,EAAAA,UAAU,CAACG,IAAD,EAAO;AACb,QAAGA,IAAI,CAACE,MAAL,KAAgB,QAAnB,EAA6B;AACzB,WAAKX,KAAL,CAAWL,OAAX,CAAmBmB,UAAnB,CAA8BL,IAAI,CAACC,IAAL,CAAUK,EAAxC,EAA4CC,IAA5C,CAAiD,MAAM;AACnD,aAAKhB,KAAL,CAAWL,OAAX,CAAmBkB,WAAnB;AACA,aAAKb,KAAL,CAAWiB,MAAX,CAAkBC,GAAlB,CACA;AACIC,UAAAA,QAAQ,EAAE,WADd;AAEIC,UAAAA,IAAI,EAAE,SAFV;AAGIC,UAAAA,KAAK,EAAE,sBAHX;AAIIC,UAAAA,OAAO,EAAG,wBAAuBb,IAAI,CAACC,IAAL,CAAUW,KAAM;AAJrD,SADA;AAQH,OAVD;AAWA;AACH;;AACD,SAAKrB,KAAL,CAAWL,OAAX,CAAmB4B,eAAnB,CAAmCd,IAAI,CAACC,IAAxC;AACA,SAAKV,KAAL,CAAWL,OAAX,CAAmB6B,iBAAnB,CAAqCf,IAAI,CAACE,MAA1C;AACAlB,IAAAA,MAAM,CAACgC,IAAP,CAAY,WAAZ;AACH;;AAvC+B;;AA0CpC,MAAMC,eAAe,GAAIxB,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYwB;AADhB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHlC,IAAAA,OAAO,EAAEP,kBAAkB,CAACgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,WAAlB,CAAD,EAAiCwC,QAAjC,CADxB;AAEHZ,IAAAA,MAAM,EAAE7B,kBAAkB,CAACgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,aAAlB,CAAD,EAAmCiC,QAAnC;AAFvB,GAAP;AAIH,CALD;;AAMA,eAAevC,OAAO,CAACoC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C/B,KAA7C,CAAf","sourcesContent":["import React from 'React';\r\nimport Layout from '../components/Layout';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as blogActions from '../store/blogs/actions';\r\nimport {connect} from 'react-redux';\r\nimport BlogList from '../components/BlogList';\r\nimport { throws } from 'assert';\r\nimport  Router  from 'next/router';\r\nimport { Button } from 'react-bootstrap';\r\nimport { actions as toastrActions} from 'react-redux-toastr';\r\nclass Index extends React.Component {\r\n    constructor(props, context){\r\n      super(props, context);\r\n      this.state = {\r\n          blogs: Object.assign({}, this.props.blogs)\r\n      }\r\n      this.selectBlog = this.selectBlog.bind(this);\r\n    }\r\n    render() {\r\n        const {blogs} = this.props;\r\n        return (\r\n            <Layout>\r\n                <BlogList blogs={blogs} onClick={(data) => this.selectBlog(data)}></BlogList>\r\n                <Button onClick={() => this.selectBlog({blog: null, action: \"create\"})}>Create Blog</Button>\r\n            </Layout>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.props.actions.getAllBlogs();\r\n    }\r\n\r\n    selectBlog(data) {\r\n        if(data.action === \"delete\") {\r\n            this.props.actions.deleteBlog(data.blog.id).then(() => {\r\n                this.props.actions.getAllBlogs();\r\n                this.props.toastr.add(\r\n                {\r\n                    position: 'top-right',\r\n                    type: 'success',\r\n                    title: \"Deletion Successfull\",\r\n                    message: `Successfully deleted ${data.blog.title}`\r\n                }\r\n                )\r\n            });\r\n            return;\r\n        }\r\n        this.props.actions.setSelectedBlog(data.blog);\r\n        this.props.actions.setBlogFormAction(data.action);\r\n        Router.push('/blogform');\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        blogs: state.blogs.allBlogs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        actions: bindActionCreators(Object.assign({}, blogActions), dispatch),\r\n        toastr: bindActionCreators(Object.assign({}, toastrActions), dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);"]},"metadata":{},"sourceType":"module"}